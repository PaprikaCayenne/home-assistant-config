new_script:
  alias: Trigger URC Event
  sequence:
  - event: urc_event_trigger
    event_data:
      event_id: '{{ event_id }}'
  fields:
    event_id:
      name: URC Event ID
      selector:
        text:
      description: A unique event id that will be triggered on the URC Controller
      required: true
  mode: parallel
  max: 100
  icon: mdi:home-sound-out-outline
bedroom_primary_light_control_script:
  alias: Bedroom Primary Light Control | Script
  description: ''
  sequence:
  - choose:
    - conditions:
      - condition: time
        after: 06:00:00
        before: '11:00:00'
        weekday:
        - sun
        - mon
        - tue
        - wed
        - thu
        - fri
        - sat
      sequence:
      - action: light.turn_on
        metadata: {}
        data:
          color_temp_kelvin: 3500
          brightness_pct: 50
          transition: 1
        target:
          entity_id: light.bedroom_primary_hue_group_switch
    - conditions:
      - condition: time
        after: '11:00:00'
        before: '23:00:00'
        weekday:
        - sun
        - mon
        - tue
        - wed
        - thu
        - fri
        - sat
      sequence:
      - action: light.turn_on
        metadata: {}
        data:
          transition: 1
          color_temp_kelvin: 3500
          brightness_pct: 100
        target:
          entity_id: light.bedroom_primary_hue_group_switch
    - conditions:
      - condition: time
        after: '23:00:00'
        weekday:
        - sun
        - mon
        - tue
        - wed
        - thu
        - fri
        - sat
      sequence:
      - action: light.turn_on
        metadata: {}
        data:
          brightness_pct: 20
          color_temp_kelvin: 2800
          transition: 1
        target:
          entity_id: light.bedroom_primary_hue_group_switch
bedroom_primary_manual_on_via_dashboard:
  alias: 'Bedroom Primary: Manual On via Dashboard | Script'
  description: Manually turns on the bedroom light and enables the manual override
    toggle.
  mode: single
  sequence:
  - action: light.turn_on
    target:
      entity_id: light.bedroom_primary_hue_group_switch
    data:
      transition: 1
  - action: input_boolean.turn_on
    data: {}
    metadata: {}
    target:
      entity_id: input_boolean.bedroom_primary_lights_manual_override
bedroom_primary_manual_off_via_dashboard:
  alias: 'Bedroom Primary: Manual Off via Dashboard | Script'
  description: Disables lights and motion override for Bedroom Primary when turned
    off via dashboard.
  mode: single
  sequence:
  - action: light.turn_off
    target:
      entity_id: light.bedroom_primary_hue_group_switch
    data:
      transition: 0.5
  - action: input_boolean.turn_off
    data: {}
    metadata: {}
    target:
      entity_id: input_boolean.bedroom_primary_lights_manual_override
  - action: input_boolean.turn_on
    target:
      entity_id: input_boolean.bedroom_primary_motion_enabled
    data: {}
    metadata: {}
bedroom_primary_dashboard_tap_logic:
  alias: 'Bedroom Primary: Dashboard Tap Logic | Script'
  mode: single
  sequence:
  - choose:
    - conditions:
      - condition: state
        entity_id: light.bedroom_primary_hue_group_switch
        state: 'off'
      sequence:
      - action: script.bedroom_primary_manual_on_via_dashboard
        data: {}
    - conditions:
      - condition: state
        entity_id: light.bedroom_primary_hue_group_switch
        state: 'on'
      sequence:
      - action: script.bedroom_primary_manual_off_via_dashboard
        data: {}
  description: ''
kitchen_light_control_script:
  alias: 'Kitchen: Light Control | Script'
  description: Adjusts kitchen lighting based on time of day and motion detection
  sequence:
  - choose:
    - conditions:
      - condition: template
        value_template: '{% set now_ts = now().timestamp() %} {% set sunrise_ts =
          as_timestamp(state_attr(''sun.sun'', ''next_rising'')) %} {% set wkd = now().weekday()
          >= 5 %} {% set start_ts = now().replace(hour=(3 if wkd else 2), minute=0,
          second=0).timestamp() %} {{ now_ts >= start_ts and now_ts < sunrise_ts }}

          '
      sequence:
      - action: light.turn_on
        metadata: {}
        data:
          color_temp_kelvin: 2700
          transition: 0.5
          brightness_pct: 100
        target:
          entity_id: light.kitchen_hue_group_switch
      - action: light.turn_on
        metadata: {}
        data:
          transition: 0.5
          brightness_pct: 100
        target:
          entity_id: light.kitchen_above_cabinet_lightstrip
    - conditions:
      - condition: time
        after: '23:00:00'
        before: 00:30:00
      sequence:
      - action: light.turn_on
        metadata: {}
        data:
          transition: 0.5
          color_temp_kelvin: 3000
          brightness_pct: 50
        target:
          entity_id: light.kitchen_hue_group_switch
      - action: light.turn_on
        metadata: {}
        data:
          brightness_pct: 50
          transition: 0.5
        target:
          entity_id: light.kitchen_above_cabinet_lightstrip
    default:
    - action: light.turn_on
      metadata: {}
      data:
        transition: 0.5
        brightness_pct: 100
        color_temp_kelvin: 3500
      target:
        entity_id: light.kitchen_hue_group_switch
    - action: light.turn_on
      metadata: {}
      data:
        transition: 0.5
        brightness_pct: 100
      target:
        entity_id: light.kitchen_above_cabinet_lightstrip
livingroom_light_control_script:
  alias: 'Livingroom: Light Control | Script'
  description: Adjusts Livingroom lighting based on time of day and motion detection
  sequence:
  - choose:
    - conditions:
      - condition: template
        value_template: '{% set now_ts = now().timestamp() %} {% set sunrise_ts =
          as_timestamp(state_attr(''sun.sun'', ''next_rising'')) %} {% set wkd = now().weekday()
          >= 5 %} {% set start_ts = now().replace(hour=(3 if wkd else 2), minute=0,
          second=0).timestamp() %} {{ now_ts >= start_ts and now_ts < sunrise_ts }}

          '
      sequence:
      - action: light.turn_on
        metadata: {}
        data:
          brightness_pct: 100
          color_temp_kelvin: 2700
          transition: 0.5
        target:
          entity_id: light.livingroom_hue_group_switch
      - action: light.turn_on
        metadata: {}
        data:
          brightness_pct: 100
          transition: 0.5
        target:
          entity_id: light.livingroom_couch_lightstrip
    - conditions:
      - condition: time
        after: '23:00:00'
        before: 00:30:00
      sequence:
      - action: light.turn_on
        metadata: {}
        data:
          brightness_pct: 20
          color_temp_kelvin: 3000
          transition: 0.5
        target:
          entity_id: light.livingroom_hue_group_switch
      - action: light.turn_on
        metadata: {}
        data:
          brightness_pct: 100
          transition: 0.5
        target:
          entity_id: light.livingroom_couch_lightstrip
    default:
    - action: light.turn_on
      metadata: {}
      data:
        brightness_pct: 100
        transition: 0.5
        color_temp_kelvin: 3500
      target:
        entity_id: light.livingroom_hue_group_switch
    - action: light.turn_on
      metadata: {}
      data:
        transition: 5
        brightness_pct: 100
      target:
        entity_id: light.livingroom_couch_lightstrip
global_reset_manual_overrides_off:
  alias: 'Global: Reset Manual Overrides Off | Script'
  mode: single
  icon: mdi:toggle-switch-off
  sequence:
  - action: input_boolean.turn_off
    metadata: {}
    data: {}
    target:
      entity_id:
      - input_boolean.office_lights_manual_override
      - input_boolean.kitchen_lights_manual_override
      - input_boolean.hallway_lights_manual_override
      - input_boolean.office_lights_manual_override
      - input_boolean.hallway_lights_manual_override
      - input_boolean.livingroom_lights_manual_override
      - input_boolean.bathroom_guest_lights_manual_override
      - input_boolean.bathroom_guest_lights_manual_override
      - input_boolean.bathroom_primary_lights_manual_override
      - input_boolean.bedroom_primary_lights_manual_override
      - input_boolean.stairs_lights_manual_override
  description: Turns off all manual override toggles (lights, cleaning, private time,
    etc.) to restore automation.
global_enable_motion_automation:
  alias: 'Global: Enable Motion Automation | Script'
  icon: mdi:motion-sensor
  mode: single
  description: 'Enables motion automation toggles for rooms that still use motion
    booleans. Removes FP2-managed rooms (Kitchen, Livingroom).

    '
  sequence:
  - target:
      entity_id:
      - input_boolean.office_motion_enabled
      - input_boolean.bedroom_primary_motion_enabled
      - input_boolean.hallway_motion_enabled
      - input_boolean.bathroom_guest_motion_enabled
      - input_boolean.bathroom_primary_motion_enabled
      - input_boolean.stairs_motion_enabled
    action: input_boolean.turn_on
    data: {}
global_disable_motion_automation:
  alias: 'Global: Disable Motion Automation | Script'
  icon: mdi:motion-pause
  mode: single
  description: 'Disables motion automation toggles for rooms still using motion booleans.
    Excludes Kitchen and Livingroom (FP2-managed).

    '
  sequence:
  - target:
      entity_id:
      - input_boolean.office_motion_enabled
      - input_boolean.bedroom_primary_motion_enabled
      - input_boolean.hallway_motion_enabled
      - input_boolean.bathroom_guest_motion_enabled
      - input_boolean.bathroom_primary_motion_enabled
      - input_boolean.stairs_motion_enabled
    action: input_boolean.turn_off
    data: {}
reset_kitchen_livingroom_motion:
  alias: Reset Kitchen & Livingroom Motion
  description: 'Clear overrides and start per-room motion cooldowns so motion doesn''t
    immediately retrigger after lights are turned off.

    '
  mode: single
  sequence:
  - action: input_boolean.turn_off
    target:
      entity_id:
      - input_boolean.kitchen_lights_manual_override
      - input_boolean.livingroom_lights_manual_override
  - action: script.turn_on
    target:
      entity_id: script.kitchen_start_motion_cooldown
  - action: script.turn_on
    target:
      entity_id: script.livingroom_start_motion_cooldown
global_clear_all_overrides:
  alias: 'Global: Clear All Overrides | Script'
  description: 'Turns off all manual lighting overrides and global mode booleans that
    interfere with motion automation.

    '
  mode: single
  icon: mdi:power-off
  sequence:
  - target:
      entity_id:
      - input_boolean.kitchen_lights_manual_override
      - input_boolean.livingroom_lights_manual_override
      - input_boolean.office_lights_manual_override
      - input_boolean.bedroom_primary_lights_manual_override
      - input_boolean.bathroom_primary_lights_manual_override
      - input_boolean.bathroom_guest_lights_manual_override
      - input_boolean.hallway_lights_manual_override
      - input_boolean.cleaning
      - input_boolean.party
      - input_boolean.movie
      - input_boolean.stairs_lights_manual_override
    action: input_boolean.turn_off
    data: {}
kitchen_toggle_manual_override:
  alias: 'Kitchen: Toggle Manual Override | Script'
  description: 'Toggles the kitchen manual override boolean and turns the lights on
    if enabling override, or off if disabling it.

    '
  mode: single
  icon: mdi:lightbulb
  sequence:
  - variables:
      is_on: '{{ is_state(''input_boolean.kitchen_lights_manual_override'', ''on'')
        }}'
  - target:
      entity_id: input_boolean.kitchen_lights_manual_override
    action: input_boolean.toggle
    data: {}
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ not is_on }}'
      sequence:
      - target:
          entity_id: light.kitchen_hue_group_switch
        action: light.turn_on
        data: {}
    - conditions:
      - condition: template
        value_template: '{{ is_on }}'
      sequence:
      - target:
          entity_id: light.kitchen_hue_group_switch
        action: light.turn_off
        data: {}
party_toggle_mode:
  alias: 'Party: Toggle Mode | Script'
  description: 'Toggles party mode and turns on common area lights for social settings.

    '
  mode: single
  icon: mdi:party-popper
  sequence:
  - variables:
      is_on: '{{ is_state(''input_boolean.party'', ''on'') }}'
  - target:
      entity_id: input_boolean.party
    action: input_boolean.toggle
    data: {}
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ not is_on }}'
      sequence:
      - target:
          entity_id:
          - light.kitchen_hue_group_switch
          - light.livingroom_hue_group_switch
          - light.hallway_ceiling_lights
          - light.patio_hue_group_switch
        action: light.turn_on
        data: {}
    - conditions:
      - condition: template
        value_template: '{{ is_on }}'
      sequence:
      - target:
          entity_id:
          - light.kitchen_hue_group_switch
          - light.livingroom_hue_group_switch
          - light.hallway_ceiling_lights
          - light.patio_hue_group_switch
        action: light.turn_off
        data: {}
cleaning_toggle_mode:
  alias: 'Cleaning: Toggle Mode | Script'
  description: 'Toggles cleaning mode. When enabled, turns on all house lights (excluding
    pantry), and disables motion automation for non-FP2 rooms. When disabled, turns
    off lights and re-enables motion automation.

    '
  mode: single
  icon: mdi:broom
  sequence:
  - variables:
      is_on: '{{ is_state(''input_boolean.cleaning'', ''on'') }}'
  - target:
      entity_id: input_boolean.cleaning
    action: input_boolean.toggle
    data: {}
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ not is_on }}'
      sequence:
      - target:
          entity_id:
          - light.kitchen_hue_group_switch
          - light.livingroom_hue_group_switch
          - light.bedroom_primary_hue_group_switch
          - light.patio_hue_group_switch
          - light.downstairs_inside
          - light.downstairs_hue_group
          - light.upstairs_hue_group
          - light.office_desk_lamp
          - light.bedroom_lamp_left
          - light.bedroom_lamp_right
          - light.livingroom_lamp_1
          - light.livingroom_lamp_2
          - light.kitchen_ceiling_lights
          - light.hallway_ceiling_lights
          - light.bathroom_primary_ceiling
          - light.bathroom_guest_ceiling
          - light.stairs_lights
          - light.entryway_ceiling
          - light.guest_bedroom_ceiling
        action: light.turn_on
        data: {}
      - target:
          entity_id:
          - input_boolean.office_motion_enabled
          - input_boolean.bedroom_primary_motion_enabled
          - input_boolean.bathroom_primary_motion_enabled
          - input_boolean.bathroom_guest_motion_enabled
          - input_boolean.hallway_motion_enabled
        action: input_boolean.turn_off
        data: {}
    - conditions:
      - condition: template
        value_template: '{{ is_on }}'
      sequence:
      - target:
          entity_id:
          - light.kitchen_hue_group_switch
          - light.livingroom_hue_group_switch
          - light.bedroom_primary_hue_group_switch
          - light.patio_hue_group_switch
          - light.downstairs_inside
          - light.downstairs_hue_group
          - light.upstairs_hue_group
          - light.office_desk_lamp
          - light.bedroom_lamp_left
          - light.bedroom_lamp_right
          - light.livingroom_lamp_1
          - light.livingroom_lamp_2
          - light.kitchen_ceiling_lights
          - light.hallway_ceiling_lights
          - light.bathroom_primary_ceiling
          - light.bathroom_guest_ceiling
          - light.stairs_lights
          - light.entryway_ceiling
          - light.guest_bedroom_ceiling
        action: light.turn_off
        data: {}
      - target:
          entity_id:
          - input_boolean.office_motion_enabled
          - input_boolean.bedroom_primary_motion_enabled
          - input_boolean.bathroom_primary_motion_enabled
          - input_boolean.bathroom_guest_motion_enabled
          - input_boolean.hallway_motion_enabled
        action: input_boolean.turn_on
        data: {}
bedroom_toggle_private_time:
  alias: 'Bedroom: Toggle Private Time | Script'
  description: 'Toggles private time mode in the primary bedroom. When enabled, sets
    lights  to low brightness, activates Blood Moon lighting, and enables privacy
    mode  on the bedroom camera. When disabled, turns off lights and disables privacy
    mode.

    '
  mode: single
  icon: mdi:bed
  sequence:
  - variables:
      is_on: '{{ is_state(''input_boolean.private_time'', ''on'') }}'
  - target:
      entity_id: input_boolean.private_time
    action: input_boolean.toggle
    data: {}
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ not is_on }}'
      sequence:
      - target:
          entity_id: light.bedroom_primary_hue_group_switch
        data:
          brightness_pct: 5
          color_name: red
        action: light.turn_on
      - target:
          entity_id: switch.camera_bedroom_primary_privacy_mode
        action: switch.turn_on
        data: {}
    - conditions:
      - condition: template
        value_template: '{{ is_on }}'
      sequence:
      - target:
          entity_id: light.bedroom_primary_hue_group_switch
        action: light.turn_off
        data: {}
      - target:
          entity_id: switch.camera_bedroom_primary_privacy_mode
        action: switch.turn_off
        data: {}
livingroom_toggle_lights_manual_override:
  alias: 'Livingroom: Toggle Lights & Manual Override | Script'
  description: 'Toggles living room lights and override based on current state: -
    If lights are OFF, turn ON using control script and enable override. - If lights
    are ON and override is OFF, enable override (keep lights ON). - If lights are
    ON and override is ON, turn OFF and disable override.

    '
  mode: restart
  sequence:
  - choose:
    - conditions:
      - condition: state
        entity_id: light.livingroom_hue_group_switch
        state: 'off'
      sequence:
      - action: script.turn_on
        target:
          entity_id: script.livingroom_light_control_script
        data: {}
      - action: input_boolean.turn_on
        target:
          entity_id: input_boolean.livingroom_lights_manual_override
        data: {}
    - conditions:
      - condition: state
        entity_id: light.livingroom_hue_group_switch
        state: 'on'
      - condition: state
        entity_id: input_boolean.livingroom_lights_manual_override
        state: 'off'
      sequence:
      - action: input_boolean.turn_on
        target:
          entity_id: input_boolean.livingroom_lights_manual_override
        data: {}
    - conditions:
      - condition: state
        entity_id: light.livingroom_hue_group_switch
        state: 'on'
      - condition: state
        entity_id: input_boolean.livingroom_lights_manual_override
        state: 'on'
      sequence:
      - action: light.turn_off
        data:
          transition: 0.5
        target:
          entity_id: light.livingroom_hue_group_switch
      - action: input_boolean.turn_off
        target:
          entity_id: input_boolean.livingroom_lights_manual_override
        data: {}
      - action: script.turn_on
        target:
          entity_id: script.livingroom_start_motion_cooldown
        data: {}
hallway_reset_motion:
  alias: 'Hallway: Reset Motion | Script'
  description: 'Turns off hallway manual override and re-enables motion automation.

    '
  mode: single
  icon: mdi:motion-sensor
  sequence:
  - target:
      entity_id: input_boolean.hallway_lights_manual_override
    action: input_boolean.turn_off
    data: {}
  - target:
      entity_id: input_boolean.hallway_motion_enabled
    action: input_boolean.turn_on
    data: {}
bedroom_primary_reset_motion:
  alias: 'Bedroom Primary: Reset Motion | Script'
  description: 'Turns off manual override and re-enables motion automation in the
    primary bedroom.

    '
  mode: single
  icon: mdi:motion-sensor
  sequence:
  - target:
      entity_id: input_boolean.bedroom_primary_lights_manual_override
    action: input_boolean.turn_off
    data: {}
  - target:
      entity_id: input_boolean.bedroom_primary_motion_enabled
    action: input_boolean.turn_on
    data: {}
hallway_toggle_lights_manual_override:
  alias: 'Hallway: Toggle Lights & Manual Override | Script'
  description: 'Toggles hallway lights and override based on current state: - If lights
    are OFF, turn ON and enable override. - If lights are ON and override is OFF,
    enable override (keep lights ON). - If lights are ON and override is ON, turn
    OFF and disable override.

    '
  mode: restart
  sequence:
  - choose:
    - conditions:
      - condition: state
        entity_id: light.hallway_main_lights
        state: 'off'
      sequence:
      - action: light.turn_on
        metadata: {}
        data:
          transition: 0.5
          brightness_pct: 100
        target:
          entity_id: light.hallway_main_lights
      - action: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.hallway_lights_manual_override
    - conditions:
      - condition: state
        entity_id: light.hallway_main_lights
        state: 'on'
      - condition: state
        entity_id: input_boolean.hallway_lights_manual_override
        state: 'off'
      sequence:
      - action: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.hallway_lights_manual_override
    - conditions:
      - condition: state
        entity_id: light.hallway_main_lights
        state: 'on'
      - condition: state
        entity_id: input_boolean.hallway_lights_manual_override
        state: 'on'
      sequence:
      - action: light.turn_off
        metadata: {}
        data:
          transition: 0.5
        target:
          entity_id:
          - light.hallway_main_lights
      - action: input_boolean.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.hallway_lights_manual_override
      - action: script.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: script.hallway_start_motion_cooldown
bathroom_primary_reset_motion:
  alias: 'Bathroom Primary: Reset Motion | Script'
  description: 'Turns off primary bathroom manual override and re-enables motion automation.

    '
  mode: single
  icon: mdi:motion-sensor
  sequence:
  - target:
      entity_id: input_boolean.bathroom_primary_lights_manual_override
    action: input_boolean.turn_off
    data: {}
  - target:
      entity_id: input_boolean.bathroom_primary_motion_enabled
    action: input_boolean.turn_on
    data: {}
bedroom_primary_toggle_lights_manual_override:
  alias: 'Bedroom Primary: Toggle Lights & Manual Override | Script'
  description: 'Toggles lights and override based on current state: - If lights are
    OFF, turn ON and enable override. - If lights are ON and override is OFF, enable
    override (keep lights ON). - If lights are ON and override is ON, turn OFF and
    disable override.

    '
  mode: restart
  sequence:
  - choose:
    - conditions:
      - condition: state
        entity_id: light.bedroom_primary_hue_group_switch
        state: 'off'
      sequence:
      - action: light.turn_on
        metadata: {}
        data:
          transition: 0.5
          color_temp_kelvin: 3500
          brightness_pct: 100
        target:
          entity_id: light.bedroom_primary_hue_group_switch
      - action: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.bedroom_primary_lights_manual_override
    - conditions:
      - condition: state
        entity_id: light.bedroom_primary_hue_group_switch
        state: 'on'
      - condition: state
        entity_id: input_boolean.bedroom_primary_lights_manual_override
        state: 'off'
      sequence:
      - action: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.bedroom_primary_lights_manual_override
    - conditions:
      - condition: state
        entity_id: light.bedroom_primary_hue_group_switch
        state: 'on'
      - condition: state
        entity_id: input_boolean.bedroom_primary_lights_manual_override
        state: 'on'
      sequence:
      - action: light.turn_off
        metadata: {}
        data:
          transition: 0.5
        target:
          entity_id: light.bedroom_primary_hue_group_switch
      - action: input_boolean.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.bedroom_primary_lights_manual_override
      - action: script.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: script.bedroom_primary_start_motion_cooldown
bathroom_guest_reset_motion:
  alias: 'Bathroom Guest: Reset Motion | Script'
  description: 'Turns off guest bathroom manual override and re-enables motion automation.

    '
  mode: single
  icon: mdi:motion-sensor
  sequence:
  - target:
      entity_id: input_boolean.bathroom_guest_lights_manual_override
    action: input_boolean.turn_off
    data: {}
  - target:
      entity_id: input_boolean.bathroom_guest_motion_enabled
    action: input_boolean.turn_on
    data: {}
bathroom_guest_toggle_lights_manual_override:
  alias: 'Bathroom Guest: Toggle Lights & Manual Override | Script'
  description: 'Toggles lights and override based on current state: - If lights are
    OFF, turn ON and enable override. - If lights are ON and override is OFF, enable
    override (keep lights ON). - If lights are ON and override is ON, turn OFF and
    disable override.

    '
  mode: restart
  sequence:
  - choose:
    - conditions:
      - condition: state
        entity_id: light.bathroom_guest_vanity_lights
        state: 'off'
      sequence:
      - action: light.turn_on
        metadata: {}
        data:
          transition: 0.5
          brightness_pct: 100
        target:
          entity_id: light.bathroom_guest_vanity_lights
      - action: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.bathroom_guest_lights_manual_override
    - conditions:
      - condition: state
        entity_id: light.bathroom_guest_vanity_lights
        state: 'on'
      - condition: state
        entity_id: input_boolean.bathroom_guest_lights_manual_override
        state: 'off'
      sequence:
      - action: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.bathroom_guest_lights_manual_override
    - conditions:
      - condition: state
        entity_id: light.bathroom_guest_vanity_lights
        state: 'on'
      - condition: state
        entity_id: input_boolean.bathroom_guest_lights_manual_override
        state: 'on'
      sequence:
      - action: light.turn_off
        metadata: {}
        data:
          transition: 0.5
        target:
          entity_id:
          - light.bathroom_guest_vanity_lights
      - action: input_boolean.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.bathroom_guest_lights_manual_override
      - action: script.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: script.bathroom_guest_start_motion_cooldown
downstairs_enable_motion_override:
  alias: 'Downstairs: Enable Motion Override | Script'
  description: 'Enables manual override for both kitchen and livingroom lights and
    provides a brief visual cue by flashing the lights.

    '
  sequence:
  - target:
      entity_id:
      - input_boolean.kitchen_lights_manual_override
      - input_boolean.livingroom_lights_manual_override
    action: input_boolean.turn_on
    data: {}
  - target:
      entity_id:
      - light.kitchen_hue_group_switch
      - light.livingroom_hue_group_switch
    data:
      transition: 0.2
    action: light.turn_off
  - delay:
      milliseconds: 300
  - target:
      entity_id:
      - light.kitchen_hue_group_switch
      - light.livingroom_hue_group_switch
    data:
      brightness_pct: 100
      transition: 0.3
    action: light.turn_on
  mode: single
downstairs_enable_manual_override:
  alias: 'Downstairs: Enable Manual Override | Script'
  description: 'Enables manual override for Kitchen and Livingroom. Disables motion-based
    lighting indirectly via presence detection.

    '
  mode: single
  sequence:
  - target:
      entity_id:
      - input_boolean.kitchen_lights_manual_override
      - input_boolean.livingroom_lights_manual_override
    action: input_boolean.turn_on
    data: {}
downstairs_activate_concentrate_mode:
  alias: 'Downstairs: Activate Concentrate Mode | Script'
  description: 'Activates the Downstairs Concentrate scene and enables manual override
    for Kitchen and Livingroom (used to suppress FP2-triggered lighting changes).

    '
  mode: single
  sequence:
  - target:
      entity_id: scene.downstairs_inside_concentrate
    action: scene.turn_on
    data: {}
  - target:
      entity_id:
      - input_boolean.kitchen_lights_manual_override
      - input_boolean.livingroom_lights_manual_override
    action: input_boolean.turn_on
    data: {}
livingroom_start_motion_cooldown:
  alias: 'Livingroom: Start Motion Cooldown | Script'
  description: 'Enables the motion cooldown boolean for Livingroom, waits 15 seconds,
    then disables it — but only if the override is still off. Prevents motion from
    reactivating if the user turns the override back on.

    '
  mode: restart
  sequence:
  - action: input_boolean.turn_on
    metadata: {}
    data: {}
    target:
      entity_id: input_boolean.livingroom_motion_cooldown_boolean
  - delay:
      seconds: 15
  - condition: state
    entity_id: input_boolean.livingroom_lights_manual_override
    state: 'off'
  - action: input_boolean.turn_off
    metadata: {}
    data: {}
    target:
      entity_id: input_boolean.livingroom_motion_cooldown_boolean
kitchen_start_motion_cooldown:
  alias: 'Kitchen: Start Motion Cooldown | Script'
  description: 'Enables the motion cooldown boolean for Kitchen, waits 15 seconds,
    then disables it — but only if the override is still off. Prevents motion from
    reactivating if the user turns the override back on.

    '
  mode: restart
  sequence:
  - action: input_boolean.turn_on
    metadata: {}
    data: {}
    target:
      entity_id: input_boolean.kitchen_motion_cooldown_boolean
  - delay:
      seconds: 15
  - condition: state
    entity_id: input_boolean.kitchen_lights_manual_override
    state: 'off'
  - action: input_boolean.turn_off
    metadata: {}
    data: {}
    target:
      entity_id: input_boolean.kitchen_motion_cooldown_boolean
guest_bedroom_start_motion_cooldown:
  alias: 'Guest Bedroom: Start Motion Cooldown | Script'
  description: 'Enables the motion cooldown boolean for Guest Bedroom, waits 15 seconds,
    then disables it — but only if the override is still off. Prevents motion from
    reactivating if the user turns the override back on.

    '
  mode: restart
  sequence:
  - action: input_boolean.turn_on
    metadata: {}
    data: {}
    target:
      entity_id: input_boolean.bedroom_guest_motion_cooldown_boolean
  - delay:
      seconds: 15
  - condition: state
    entity_id: input_boolean.bedroom_guest_lights_manual_override
    state: 'off'
  - action: input_boolean.turn_off
    metadata: {}
    data: {}
    target:
      entity_id: input_boolean.bedroom_guest_motion_cooldown_boolean
hallway_start_motion_cooldown:
  alias: 'Hallway: Start Motion Cooldown | Script'
  description: 'Enables the motion cooldown boolean for Hallway, waits 15 seconds,
    then disables it — but only if the override is still off. Prevents motion from
    reactivating if the user turns the override back on.

    '
  mode: restart
  sequence:
  - action: input_boolean.turn_on
    target:
      entity_id: input_boolean.hallway_motion_cooldown_boolean
    data: {}
  - delay:
      seconds: 15
  - condition: state
    entity_id: input_boolean.hallway_lights_manual_override
    state: 'off'
  - action: input_boolean.turn_off
    target:
      entity_id: input_boolean.hallway_motion_cooldown_boolean
    data: {}
bedroom_primary_start_motion_cooldown:
  alias: 'Bedroom Primary: Start Motion Cooldown | Script'
  description: 'Enables the motion cooldown boolean for Primary Bedroom, waits 15
    seconds, then disables it — but only if the override is still off. Prevents motion
    from reactivating if the user turns the override back on.

    '
  mode: restart
  sequence:
  - action: input_boolean.turn_on
    target:
      entity_id: input_boolean.bedroom_primary_motion_cooldown_boolean
    data: {}
  - delay:
      seconds: 15
  - condition: state
    entity_id: input_boolean.bedroom_primary_lights_manual_override
    state: 'off'
  - action: input_boolean.turn_off
    target:
      entity_id: input_boolean.bedroom_primary_motion_cooldown_boolean
    data: {}
bathroom_primary_start_motion_cooldown:
  alias: 'Bathroom Primary: Start Motion Cooldown | Script'
  description: 'Enables the motion cooldown boolean for Primary Bathroom, waits 15
    seconds, then disables it — but only if the override is still off. Prevents motion
    from reactivating if the user turns the override back on.

    '
  mode: restart
  sequence:
  - action: input_boolean.turn_on
    target:
      entity_id: input_boolean.bathroom_primary_motion_cooldown_boolean
    data: {}
  - delay:
      seconds: 15
  - condition: state
    entity_id: input_boolean.bathroom_primary_lights_manual_override
    state: 'off'
  - action: input_boolean.turn_off
    target:
      entity_id: input_boolean.bathroom_primary_motion_cooldown_boolean
    data: {}
bathroom_guest_start_motion_cooldown:
  alias: 'Bathroom Guest: Start Motion Cooldown | Script'
  description: 'Enables the motion cooldown boolean for Guest Bathroom, waits 15 seconds,
    then disables it — but only if the override is still off. Prevents motion from
    reactivating if the user turns the override back on.

    '
  mode: restart
  sequence:
  - action: input_boolean.turn_on
    target:
      entity_id: input_boolean.bathroom_guest_motion_cooldown_boolean
    data: {}
  - delay:
      seconds: 15
  - condition: state
    entity_id: input_boolean.bathroom_guest_lights_manual_override
    state: 'off'
  - action: input_boolean.turn_off
    target:
      entity_id: input_boolean.bathroom_guest_motion_cooldown_boolean
    data: {}
stairs_start_motion_cooldown:
  alias: 'Stairs: Start Motion Cooldown | Script'
  description: 'Enables the motion cooldown boolean for Stairs, waits 15 seconds,
    then disables it — but only if the override is still off. Prevents motion from
    reactivating if the user turns the override back on.

    '
  mode: restart
  sequence:
  - action: input_boolean.turn_on
    target:
      entity_id: input_boolean.stairs_motion_cooldown_boolean
    data: {}
  - delay:
      seconds: 15
  - condition: state
    entity_id: input_boolean.stairs_lights_manual_override
    state: 'off'
  - action: input_boolean.turn_off
    target:
      entity_id: input_boolean.stairs_motion_cooldown_boolean
    data: {}
stairs_toggle_lights_manual_override:
  alias: 'Stairs: Toggle Lights & Manual Override | Script'
  description: 'Toggles stairway lights and override based on current state: - If
    lights are OFF, turn ON and enable override. - If lights are ON and override is
    OFF, enable override (keep lights ON). - If lights are ON and override is ON,
    turn OFF and disable override.

    '
  mode: restart
  sequence:
  - choose:
    - conditions:
      - condition: state
        entity_id: light.stairs_downstairs_switch
        state: 'off'
      sequence:
      - action: light.turn_on
        metadata: {}
        data:
          brightness_pct: 100
          transition: 0.5
        target:
          entity_id: light.stairs_downstairs_switch
      - action: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.stairs_lights_manual_override
    - conditions:
      - condition: state
        entity_id: light.stairs_downstairs_switch
        state: 'on'
      - condition: state
        entity_id: input_boolean.stairs_lights_manual_override
        state: 'off'
      sequence:
      - action: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.stairs_lights_manual_override
    - conditions:
      - condition: state
        entity_id: light.stairs_downstairs_switch
        state: 'on'
      - condition: state
        entity_id: input_boolean.stairs_lights_manual_override
        state: 'on'
      sequence:
      - action: light.turn_off
        metadata: {}
        data:
          transition: 0.5
        target:
          entity_id: light.stairs_downstairs_switch
      - action: input_boolean.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.stairs_lights_manual_override
      - action: script.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: script.stairs_start_motion_cooldown
downstairs_toggle_lights_manual_override:
  alias: 'Downstairs: Toggle Lights & Manual Override | Script'
  sequence:
  - action: script.kitchen_toggle_manual_override
    metadata: {}
    data: {}
  - action: script.livingroom_toggle_lights_manual_override
    metadata: {}
    data: {}
  mode: single
  description: ''
bedroom_guest_toggle_lights_manual_override:
  alias: 'Bedroom Guest: Toggle Lights & Manual Override | Script'
  description: 'Toggles lights and override based on current state: - If lights are
    OFF, turn ON and enable override. - If lights are ON and override is OFF, enable
    override (keep lights ON). - If lights are ON and override is ON, turn OFF and
    disable override.

    '
  icon: mdi:lightbulb-group-outline
  mode: restart
  sequence:
  - choose:
    - conditions:
      - condition: state
        entity_id: light.bedroom_guest_main_lights
        state: 'off'
      sequence:
      - action: light.turn_on
        metadata: {}
        data:
          transition: 0.5
          brightness_pct: 100
        target:
          entity_id: light.bedroom_guest_main_lights
      - action: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.bedroom_guest_lights_manual_override
    - conditions:
      - condition: state
        entity_id: light.bedroom_guest_main_lights
        state: 'on'
      - condition: state
        entity_id: input_boolean.bedroom_guest_lights_manual_override
        state: 'off'
      sequence:
      - action: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.bedroom_guest_lights_manual_override
    - conditions:
      - condition: state
        entity_id: light.bedroom_guest_main_lights
        state: 'on'
      - condition: state
        entity_id: input_boolean.bedroom_guest_lights_manual_override
        state: 'on'
      sequence:
      - action: light.turn_off
        metadata: {}
        data:
          transition: 0.5
        target:
          entity_id: light.bedroom_guest_main_lights
      - action: input_boolean.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.bedroom_guest_lights_manual_override
      - action: script.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: script.guest_bedroom_start_motion_cooldown
kitchen_toggle_lights_manual_override:
  alias: 'Kitchen: Toggle Lights & Manual Override | Script'
  description: 'Toggles kitchen lights and override based on current state: - If lights
    are OFF, turn ON using control script and enable override. - If lights are ON
    and override is OFF, enable override (keep lights ON). - If lights are ON and
    override is ON, turn OFF, disable override, and start cooldown.

    '
  mode: restart
  sequence:
  - choose:
    - conditions:
      - condition: state
        entity_id: light.kitchen_hue_group_switch
        state: 'off'
      sequence:
      - action: script.kitchen_light_control_script
        metadata: {}
        data: {}
      - action: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.kitchen_lights_manual_override
    - conditions:
      - condition: state
        entity_id: light.kitchen_hue_group_switch
        state: 'on'
      - condition: state
        entity_id: input_boolean.kitchen_lights_manual_override
        state: 'off'
      sequence:
      - action: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.kitchen_lights_manual_override
    - conditions:
      - condition: state
        entity_id: light.kitchen_hue_group_switch
        state: 'on'
      - condition: state
        entity_id: input_boolean.kitchen_lights_manual_override
        state: 'on'
      sequence:
      - action: light.turn_off
        metadata: {}
        data:
          transition: 0.5
        target:
          entity_id: light.kitchen_hue_group_switch
      - action: input_boolean.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.kitchen_lights_manual_override
      - action: script.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: script.kitchen_start_motion_cooldown
  icon: mdi:lightbulb-group-outline
office_toggle_lights_manual_override:
  alias: 'Office: Toggle Lights & Manual Override | Script'
  description: 'Toggles office lights and override based on current state: - If lights
    are OFF, turn ON and enable override. - If lights are ON and override is OFF,
    enable override (keep lights ON). - If lights are ON and override is ON, turn
    OFF and disable override.

    '
  mode: restart
  sequence:
  - choose:
    - conditions:
      - condition: state
        entity_id: light.office_lights_group
        state: 'off'
      sequence:
      - action: light.turn_on
        metadata: {}
        data:
          brightness_pct: 100
          transition: 0.5
        target:
          entity_id: light.office_lights_group
      - action: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.office_lights_manual_override
    - conditions:
      - condition: state
        entity_id: light.office_lights_group
        state: 'on'
      - condition: state
        entity_id: input_boolean.office_lights_manual_override
        state: 'off'
      sequence:
      - action: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.office_lights_manual_override
    - conditions:
      - condition: state
        entity_id: light.office_lights_group
        state: 'on'
      - condition: state
        entity_id: input_boolean.office_lights_manual_override
        state: 'on'
      sequence:
      - action: light.turn_off
        metadata: {}
        data:
          transition: 0.5
        target:
          entity_id: light.office_lights_group
      - action: input_boolean.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.office_lights_manual_override
      - action: script.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: script.office_start_motion_cooldown
  icon: mdi:lightbulb-group-outline
office_start_motion_cooldown:
  alias: 'Office: Start Motion Cooldown | Script'
  description: 'Enables the motion cooldown boolean for Office, waits 15 seconds,
    then disables it — but only if the override is still off. Cancels immediately
    if override is already on.

    '
  mode: restart
  sequence:
  - action: input_boolean.turn_on
    metadata: {}
    data: {}
    target:
      entity_id: input_boolean.office_motion_cooldown_boolean
  - delay:
      seconds: 15
  - condition: state
    entity_id: input_boolean.office_lights_manual_override
    state: 'off'
  - action: input_boolean.turn_off
    metadata: {}
    data: {}
    target:
      entity_id: input_boolean.office_motion_cooldown_boolean
reset_all_active_overrides:
  alias: Reset All Active Overrides | Script
  description: Checks all manual override booleans and global mode toggles. If any
    are ON, it runs the corresponding toggle script to turn them OFF. Each override
    is checked and reset independently.
  mode: parallel
  sequence:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.kitchen_lights_manual_override
        state: 'on'
      sequence:
      - action: script.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: script.kitchen_toggle_lights_manual_override
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.livingroom_lights_manual_override
        state: 'on'
      sequence:
      - action: script.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: script.livingroom_toggle_lights_manual_override
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.office_lights_manual_override
        state: 'on'
      sequence:
      - action: script.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: script.office_toggle_lights_manual_override
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.hallway_lights_manual_override
        state: 'on'
      sequence:
      - action: script.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: script.hallway_toggle_lights_manual_override
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.stairs_lights_manual_override
        state: 'on'
      sequence:
      - action: script.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: script.stairs_toggle_lights_manual_override
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.bathroom_primary_lights_manual_override
        state: 'on'
      sequence:
      - action: script.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: script.bathroom_primary_toggle_lights_manual_override_script
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.bathroom_guest_lights_manual_override
        state: 'on'
      sequence:
      - action: script.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: script.bathroom_guest_toggle_lights_manual_override
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.bedroom_primary_lights_manual_override
        state: 'on'
      sequence:
      - action: script.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: script.bedroom_primary_toggle_lights_manual_override
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.cleaning
        state: 'on'
      sequence:
      - action: script.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: script.cleaning_toggle_mode
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.party
        state: 'on'
      sequence:
      - action: script.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: script.party_toggle_mode
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.movie
        state: 'on'
      sequence:
      - action: script.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: script.movie_mode_turn_off_and_reset_devices
movie_mode_power_on_devices_set_scene_enable_overrides:
  alias: 'Audio: Movie Mode - Power On + Scene'
  description: Turns on Livingroom Fire TV + TV, ensures RZ50 main uses Multiroom
    - Firestick, then activates the Movie scene. No shutdown or motion changes here.
  icon: mdi:movie-open
  mode: single
  sequence:
  - action: input_boolean.turn_on
    target:
      entity_id: input_boolean.movie
  - parallel:
    - action: media_player.turn_on
      target:
        entity_id: media_player.livingroom_fire_tv
    - action: remote.turn_on
      target:
        entity_id: remote.livingroom_tv
  - delay: 00:00:02
  - action: script.audio_rz50_main_ensure_power_and_source
  - action: scene.turn_on
    target:
      entity_id: scene.downstairs_inside_movie_tokyo
  - action: light.turn_on
    data:
      transition: 0.5
      brightness_pct: 10
    target:
      entity_id: light.kitchen_above_cabinet_lightstrip
  - action: light.turn_on
    data:
      transition: 0.5
      brightness_pct: 10
    target:
      entity_id: light.livingroom_couch_lightstrip
movie_mode_toggle_with_popup:
  alias: 'Movie Mode: Toggle With Popup | Script'
  description: 'Handles Movie Mode toggle logic. If mode is off, it powers on the
    TV, receiver, sets input, and enables overrides. If already on, shows a confirmation
    popup before turning it off. Use this script in your Mushroom dashboard button.

    '
  mode: single
  sequence:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.movie
        state: 'off'
      sequence:
      - action: script.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: script.movie_mode_power_on_devices_set_scene_enable_overrides
    - conditions:
      - condition: state
        entity_id: input_boolean.movie
        state: 'on'
      sequence:
      - action: browser_mod.popup
        metadata: {}
        data:
          dismissable: true
          autoclose: false
          allow_nested_more_info: true
          title: Turn off Movie Mode?
          content: Are you sure you want to exit Movie Mode? This will disable overrides,
            power off devices, and resume motion-based control.
          left_button: Cancel
          left_button_action: fire-dom-event
          right_button: Yes, turn it off
          right_button_action:
            service: script.movie_mode_turn_off_and_reset_devices
        enabled: false
      - action: script.movie_mode_turn_off_and_reset_devices
        metadata: {}
        data: {}
movie_mode_turn_off_and_reset_devices:
  alias: 'Movie Mode: Turn Off and Reset Devices | Script'
  description: 'Fully disables Movie Mode: powers down the receiver and TV, disables
    override booleans, and relies on motion sensors to resume control. This script
    is used by the auto-reset automation and the confirmation popup script.

    '
  mode: single
  sequence:
  - action: input_boolean.turn_off
    metadata: {}
    data: {}
    target:
      entity_id:
      - input_boolean.movie
  - action: input_boolean.turn_off
    metadata: {}
    data: {}
    target:
      entity_id:
      - input_boolean.kitchen_lights_manual_override
      - input_boolean.livingroom_lights_manual_override
  - action: script.turn_on
    metadata: {}
    data: {}
    target:
      entity_id:
      - script.livingroom_light_control_script
      - script.kitchen_light_control_script
  - condition: state
    entity_id: media_player.tx_rz50
    state: 'on'
  - action: media_player.turn_off
    metadata: {}
    data: {}
    target:
      entity_id:
      - media_player.tx_rz50
  - condition: state
    entity_id: media_player.livingroom_tv
    state: 'on'
  - action: media_player.turn_off
    metadata: {}
    data: {}
    target:
      entity_id: media_player.livingroom_tv
  - condition: state
    entity_id: media_player.livingroom_fire_tv
    state: 'on'
  - action: media_player.turn_off
    metadata: {}
    data: {}
    target:
      entity_id: media_player.livingroom_fire_tv
  - action: light.turn_on
    metadata: {}
    data:
      transition: 0.5
      brightness_pct: 100
    target:
      entity_id: light.kitchen_above_cabinet_lightstrip
  - action: light.turn_on
    metadata: {}
    data:
      transition: 0.5
      brightness_pct: 100
    target:
      entity_id: light.livingroom_couch_lightstrip
hallway_lighting_control_script:
  alias: 'Hallway: Lighting Control | Script'
  description: 'Turns on hallway lights with different brightness levels based on
    time of day.

    '
  mode: single
  sequence:
  - choose:
    - conditions:
      - condition: time
        after: 06:00:00
        before: 08:00:00
      sequence:
      - action: light.turn_on
        metadata: {}
        data:
          transition: 1
          brightness_pct: 40
        target:
          area_id: hallway
    - conditions:
      - condition: time
        after: 08:00:00
        before: '18:00:00'
      sequence:
      - action: light.turn_on
        metadata: {}
        data:
          transition: 1
          brightness_pct: 80
        target:
          area_id: hallway
    - conditions:
      - condition: time
        after: '18:00:00'
        before: '23:00:00'
      sequence:
      - action: light.turn_on
        metadata: {}
        data:
          transition: 1
          brightness_pct: 100
        target:
          area_id: hallway
    - conditions:
      - condition: time
        after: '23:00:00'
        before: 06:00:00
      sequence:
      - action: light.turn_on
        metadata: {}
        data:
          transition: 1
          brightness_pct: 10
        target:
          area_id: hallway
stairway_lighting_control_script:
  alias: 'Stairs: Lighting Control | Script'
  description: 'Turns on stairway lights with different brightness levels based on
    time of day.

    '
  mode: single
  sequence:
  - choose:
    - conditions:
      - condition: time
        after: 06:00:00
        before: 08:00:00
      sequence:
      - action: light.turn_on
        metadata: {}
        data:
          transition: 0.5
          brightness_pct: 40
        target:
          area_id: stairs
    - conditions:
      - condition: time
        after: 08:00:00
        before: '18:00:00'
      sequence:
      - action: light.turn_on
        metadata: {}
        data:
          transition: 0.5
          brightness_pct: 80
        target:
          area_id: stairs
    - conditions:
      - condition: time
        after: '18:00:00'
        before: '23:00:00'
      sequence:
      - action: light.turn_on
        metadata: {}
        data:
          transition: 0.5
          brightness_pct: 100
        target:
          area_id: stairs
    - conditions:
      - condition: time
        after: '23:00:00'
        before: 06:00:00
      sequence:
      - action: light.turn_on
        metadata: {}
        data:
          transition: 0.5
          brightness_pct: 10
        target:
          area_id: stairs
bathroom_guest_lighting_control_script:
  alias: 'Bathroom Guest: Lighting Control | Script'
  description: 'Turns on guest bathroom lights with different brightness levels based
    on time of day.

    '
  mode: single
  sequence:
  - choose:
    - conditions:
      - condition: time
        after: 06:00:00
        before: 08:00:00
      sequence:
      - action: light.turn_on
        metadata: {}
        data:
          transition: 0.5
          brightness_pct: 40
        target:
          entity_id:
          - light.bathroom_guest_vanity_lights
    - conditions:
      - condition: time
        after: 08:00:00
        before: '18:00:00'
      sequence:
      - action: light.turn_on
        metadata: {}
        data:
          transition: 0.5
          brightness_pct: 75
        target:
          entity_id:
          - light.bathroom_guest_vanity_lights
    - conditions:
      - condition: time
        after: '18:00:00'
        before: '23:00:00'
      sequence:
      - action: light.turn_on
        metadata: {}
        data:
          transition: 0.5
          brightness_pct: 75
        target:
          entity_id:
          - light.bathroom_guest_vanity_lights
    - conditions:
      - condition: time
        after: '23:00:00'
        before: 06:00:00
      sequence:
      - action: light.turn_on
        metadata: {}
        data:
          transition: 0.5
          brightness_pct: 15
        target:
          entity_id:
          - light.bathroom_guest_vanity_lights
audio_rz50_main_ensure_power_and_source:
  alias: 'Audio: RZ50 Main Ensure Power & Source'
  description: 'Retry power on, then set source to "Multiroom - Firestick" with waits
    and verification.

    '
  icon: mdi:check-decagram
  mode: restart
  sequence:
  - variables:
      ent: media_player.tx_rz50
      expected_source: Multiroom - Firestick
      tries: 4
  - repeat:
      count: '{{ tries }}'
      sequence:
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ not is_state(ent, ''on'') }}'
          sequence:
          - target:
              entity_id: '{{ ent }}'
            action: media_player.turn_on
          - wait_template: '{{ is_state(ent, ''on'') }}'
            timeout: 00:00:25
            continue_on_timeout: true
          - delay: 00:00:02
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ expected_source in (state_attr(ent, ''source_list'')
              or []) }}

              '
          - condition: template
            value_template: '{{ state_attr(ent, ''source'') != expected_source }}

              '
          sequence:
          - target:
              entity_id: '{{ ent }}'
            data:
              source: '{{ expected_source }}'
            action: media_player.select_source
          - wait_template: '{{ state_attr(ent, ''source'') == expected_source }}

              '
            timeout: 00:00:05
            continue_on_timeout: true
          - delay: 00:00:02
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ is_state(ent, ''on'') and state_attr(ent, ''source'')
              == expected_source }}

              '
          sequence:
          - stop: RZ50 power and source confirmed
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ repeat.index < tries }}'
          sequence:
          - delay:
              seconds: '{{ [2, repeat.index] | max }}'
  - data:
      title: Audio ensure failed
      message: '{{ ent }} did not reach source ''{{ expected_source }}'' after {{
        tries }} attempt(s). Current: state=''{{ states(ent) }}'', source=''{{ state_attr(ent,
        ''source'') }}''.

        '
      notification_id: audio_ensure_{{ ent | replace('.', '_') }}
    action: persistent_notification.create
audio_rz50_zone_2_ensure_power_and_source:
  alias: 'Audio: Ensure RZ50 Zone 2 Power And Source'
  description: Retry power on, then set source to Main Zone Audio with waits and verification.
  mode: restart
  sequence:
  - repeat:
      count: 4
      sequence:
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ not is_state(''media_player.tx_rz50_zone_2'',''on'')
              }}'
          sequence:
          - target:
              entity_id: media_player.tx_rz50_zone_2
            action: media_player.turn_on
            data: {}
          - wait_template: '{{ is_state(''media_player.tx_rz50_zone_2'',''on'') }}'
            timeout: 00:00:05
            continue_on_timeout: true
          - delay: 00:00:03
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ ''Main Zone Audio'' in state_attr(''media_player.tx_rz50_zone_2'',''source_list'')
              | default([]) }}'
          - condition: template
            value_template: '{{ state_attr(''media_player.tx_rz50_zone_2'',''source'')
              != ''Main Zone Audio'' }}'
          sequence:
          - target:
              entity_id: media_player.tx_rz50_zone_2
            data:
              source: Main Zone Audio
            action: media_player.select_source
          - wait_template: '{{ state_attr(''media_player.tx_rz50_zone_2'',''source'')
              == ''Main Zone Audio'' }}'
            timeout: 00:00:05
            continue_on_timeout: true
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ is_state(''media_player.tx_rz50_zone_2'',''on'') and
              state_attr(''media_player.tx_rz50_zone_2'',''source'') == ''Main Zone
              Audio'' }}'
          sequence:
          - stop: RZ50 Zone 2 power and source confirmed
      - delay: 00:00:02
audio_rz50_zone_3_ensure_power_and_source:
  alias: 'Audio: Ensure RZ50 Zone 3 Power And Source'
  description: Retry power on, set source to Main Zone Audio, and force volume to
    100%.
  mode: restart
  sequence:
  - repeat:
      count: 4
      sequence:
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ not is_state(''media_player.tx_rz50_zone_3'',''on'')
              }}'
          sequence:
          - action: media_player.turn_on
            target:
              entity_id: media_player.tx_rz50_zone_3
            data: {}
          - wait_template: '{{ is_state(''media_player.tx_rz50_zone_3'',''on'') }}'
            timeout: 00:00:05
            continue_on_timeout: true
          - delay: 00:00:03
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ ''Main Zone Audio'' in state_attr(''media_player.tx_rz50_zone_3'',''source_list'')
              | default([]) }}

              '
          - condition: template
            value_template: '{{ state_attr(''media_player.tx_rz50_zone_3'',''source'')
              != ''Main Zone Audio'' }}

              '
          sequence:
          - action: media_player.select_source
            target:
              entity_id: media_player.tx_rz50_zone_3
            data:
              source: Main Zone Audio
          - wait_template: '{{ state_attr(''media_player.tx_rz50_zone_3'',''source'')
              == ''Main Zone Audio'' }}'
            timeout: 00:00:05
            continue_on_timeout: true
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ (state_attr(''media_player.tx_rz50_zone_3'',''volume_level'')
              | float(0)) < 0.99 }}'
          sequence:
          - action: media_player.volume_mute
            target:
              entity_id: media_player.tx_rz50_zone_3
            data:
              is_volume_muted: false
          - action: media_player.volume_set
            target:
              entity_id: media_player.tx_rz50_zone_3
            data:
              volume_level: 1
          - wait_template: '{{ (state_attr(''media_player.tx_rz50_zone_3'',''volume_level'')
              | float(0)) >= 0.99 }}'
            timeout: 00:00:05
            continue_on_timeout: true
      - choose:
        - conditions:
          - condition: template
            value_template: "{{ is_state('media_player.tx_rz50_zone_3','on')\n   and
              state_attr('media_player.tx_rz50_zone_3','source') == 'Main Zone Audio'\n
              \  and (state_attr('media_player.tx_rz50_zone_3','volume_level') | float(1))
              >= 0.99 }}\n"
          sequence:
          - stop: RZ50 Zone 3 power, source, and volume confirmed
      - delay: 00:00:02
audio_denon_office_hallway_ensure_power_and_source:
  alias: 'Audio: Denon Bedroom Guest + Office Power Off'
  description: Retry power on, then set source to Livingroom with waits and verification.
  mode: restart
  sequence:
  - repeat:
      count: 4
      sequence:
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ not is_state(''media_player.denon_office_hallway'',''on'')
              }}'
          sequence:
          - target:
              entity_id: media_player.denon_office_hallway
            action: media_player.turn_on
          - wait_template: '{{ is_state(''media_player.denon_office_hallway'',''on'')
              }}'
            timeout: 00:00:05
            continue_on_timeout: true
          - delay: 00:00:03
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ ''Livingroom'' in state_attr(''media_player.denon_office_hallway'',''source_list'')
              | default([]) }}'
          - condition: template
            value_template: '{{ state_attr(''media_player.denon_office_hallway'',''source'')
              != ''Livingroom'' }}'
          sequence:
          - target:
              entity_id: media_player.denon_office_hallway
            data:
              source: Livingroom
            action: media_player.select_source
          - wait_template: '{{ state_attr(''media_player.denon_office_hallway'',''source'')
              == ''Livingroom'' }}'
            timeout: 00:00:05
            continue_on_timeout: true
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ is_state(''media_player.denon_office_hallway'',''on'')
              and state_attr(''media_player.denon_office_hallway'',''source'') ==
              ''Livingroom'' }}'
          sequence:
          - stop: Denon Office Hallway power and source confirmed
      - delay: 00:00:02
audio_nr6100_main_ensure_power_and_source:
  alias: 'Audio: Ensure NR6100 Main Power And Source'
  description: Retry power on, then set source to Multiroom - Firestick with waits
    and verification.
  mode: restart
  sequence:
  - repeat:
      count: 4
      sequence:
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ not is_state(''media_player.tx_nr6100'',''on'') }}'
          sequence:
          - target:
              entity_id: media_player.tx_nr6100
            action: media_player.turn_on
          - wait_template: '{{ is_state(''media_player.tx_nr6100'',''on'') }}'
            timeout: 00:00:05
            continue_on_timeout: true
          - delay: 00:00:03
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ ''Multiroom - Firestick'' in state_attr(''media_player.tx_nr6100'',''source_list'')
              | default([]) }}'
          - condition: template
            value_template: '{{ state_attr(''media_player.tx_nr6100'',''source'')
              != ''Multiroom - Firestick'' }}'
          sequence:
          - target:
              entity_id: media_player.tx_nr6100
            data:
              source: Multiroom - Firestick
            action: media_player.select_source
          - wait_template: '{{ state_attr(''media_player.tx_nr6100'',''source'') ==
              ''Multiroom - Firestick'' }}'
            timeout: 00:00:05
            continue_on_timeout: true
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ is_state(''media_player.tx_nr6100'',''on'') and state_attr(''media_player.tx_nr6100'',''source'')
              == ''Multiroom - Firestick'' }}'
          sequence:
          - stop: NR6100 power and source confirmed
      - delay: 00:00:02
audio_nr6100_zone_2_ensure_power_and_source:
  alias: 'Audio: Ensure NR6100 Zone 2 Power And Source'
  description: Retry power on, then set source to Main Zone Audio with waits and verification.
  mode: restart
  sequence:
  - repeat:
      count: 4
      sequence:
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ not is_state(''media_player.tx_nr6100_zone_2'',''on'')
              }}'
          sequence:
          - target:
              entity_id: media_player.tx_nr6100_zone_2
            action: media_player.turn_on
          - wait_template: '{{ is_state(''media_player.tx_nr6100_zone_2'',''on'')
              }}'
            timeout: 00:00:05
            continue_on_timeout: true
          - delay: 00:00:03
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ ''Main Zone Audio'' in state_attr(''media_player.tx_nr6100_zone_2'',''source_list'')
              | default([]) }}'
          - condition: template
            value_template: '{{ state_attr(''media_player.tx_nr6100_zone_2'',''source'')
              != ''Main Zone Audio'' }}'
          sequence:
          - target:
              entity_id: media_player.tx_nr6100_zone_2
            data:
              source: Main Zone Audio
            action: media_player.select_source
          - wait_template: '{{ state_attr(''media_player.tx_nr6100_zone_2'',''source'')
              == ''Main Zone Audio'' }}'
            timeout: 00:00:05
            continue_on_timeout: true
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ is_state(''media_player.tx_nr6100_zone_2'',''on'')
              and state_attr(''media_player.tx_nr6100_zone_2'',''source'') == ''Main
              Zone Audio'' }}'
          sequence:
          - stop: NR6100 Zone 2 power and source confirmed
      - delay: 00:00:02
audio_denon_office_hallway_2_ensure_power_and_source:
  alias: 'Audio: Denon Hallway + Bath Guest Power Off'
  description: Retry power on, then set source to Livingroom with waits and verification.
  mode: restart
  sequence:
  - repeat:
      count: 4
      sequence:
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ not is_state(''media_player.denon_office_hallway_2'',''on'')
              }}'
          sequence:
          - target:
              entity_id: media_player.denon_office_hallway_2
            action: media_player.turn_on
            data: {}
          - wait_template: '{{ is_state(''media_player.denon_office_hallway_2'',''on'')
              }}'
            timeout: 00:00:05
            continue_on_timeout: true
          - delay: 00:00:03
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ ''Livingroom'' in state_attr(''media_player.denon_office_hallway_2'',''source_list'')
              | default([]) }}'
          - condition: template
            value_template: '{{ state_attr(''media_player.denon_office_hallway_2'',''source'')
              != ''Livingroom'' }}'
          sequence:
          - target:
              entity_id: media_player.denon_office_hallway_2
            data:
              source: Livingroom
            action: media_player.select_source
          - wait_template: '{{ state_attr(''media_player.denon_office_hallway_2'',''source'')
              == ''Livingroom'' }}'
            timeout: 00:00:05
            continue_on_timeout: true
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ is_state(''media_player.denon_office_hallway_2'',''on'')
              and state_attr(''media_player.denon_office_hallway_2'',''source'') ==
              ''Livingroom'' }}'
          sequence:
audio_denon_office_hallway_power_off:
  alias: 'Audio: Denon Hallway and Bathroom Guest Power Off'
  description: Retry power off with waits and verification.
  mode: restart
  sequence:
  - repeat:
      count: 4
      sequence:
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ is_state(''media_player.denon_office_hallway'',''on'')
              }}'
          sequence:
          - target:
              entity_id: media_player.denon_office_hallway
            action: media_player.turn_off
            data: {}
          - wait_template: '{{ not is_state(''media_player.denon_office_hallway'',''on'')
              }}'
            timeout: 00:00:05
            continue_on_timeout: true
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ not is_state(''media_player.denon_office_hallway'',''on'')
              }}'
          sequence:
          - stop: Denon Office Hallway is off
      - delay: 00:00:02
livingroom_tv_power_off:
  alias: 'Livingroom: TV Power Off'
  description: Retry power off with waits and verification.
  mode: restart
  sequence:
  - repeat:
      count: 4
      sequence:
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ states(''media_player.livingroom_tv'') not in [''off'',''standby'',''unavailable'',''unknown'']
              }}'
          sequence:
          - target:
              entity_id: media_player.livingroom_tv
            action: media_player.turn_off
          - wait_template: '{{ states(''media_player.livingroom_tv'') in [''off'',''standby'',''unavailable'',''unknown'']
              }}'
            timeout: 00:00:05
            continue_on_timeout: true
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ states(''media_player.livingroom_tv'') in [''off'',''standby'',''unavailable'',''unknown'']
              }}'
          sequence:
          - stop: Livingroom TV is off
      - delay: 00:00:02
livingroom_fire_tv_ensure_power:
  alias: 'Livingroom: Fire TV Ensure Power'
  description: Retry power on with waits and verification. Does not change source.
  mode: restart
  sequence:
  - repeat:
      count: 4
      sequence:
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ states(''media_player.livingroom_fire_tv'') in [''off'',''standby'',''unavailable'',''unknown'']
              }}'
          sequence:
          - target:
              entity_id: media_player.livingroom_fire_tv
            action: media_player.turn_on
          - wait_template: '{{ states(''media_player.livingroom_fire_tv'') not in
              [''off'',''standby'',''unavailable'',''unknown''] }}'
            timeout: 00:00:05
            continue_on_timeout: true
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ states(''media_player.livingroom_fire_tv'') not in
              [''off'',''standby'',''unavailable'',''unknown''] }}'
          sequence:
          - stop: Fire TV is on
      - delay: 00:00:02
livingroom_fire_tv_power_off:
  alias: 'Livingroom: Fire TV Power Off'
  description: Retry power off with waits and verification.
  mode: restart
  sequence:
  - repeat:
      count: 4
      sequence:
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ states(''media_player.livingroom_fire_tv'') not in
              [''off'',''standby'',''unavailable'',''unknown''] }}'
          sequence:
          - target:
              entity_id: media_player.livingroom_fire_tv
            action: media_player.turn_off
          - wait_template: '{{ states(''media_player.livingroom_fire_tv'') in [''off'',''standby'',''unavailable'',''unknown'']
              }}'
            timeout: 00:00:05
            continue_on_timeout: true
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ states(''media_player.livingroom_fire_tv'') in [''off'',''standby'',''unavailable'',''unknown'']
              }}'
          sequence:
          - stop: Fire TV is off
      - delay: 00:00:02
audio_all_speakers_on:
  alias: 'Audio: All Speakers ON (Full Parallel)'
  description: Turn on all receivers and set multiroom sources in parallel.
  mode: restart
  sequence:
  - parallel:
    - sequence:
      - action: script.audio_rz50_main_ensure_power_and_source
    - sequence:
      - action: script.audio_rz50_zone_2_ensure_power_and_source
    - sequence:
      - action: script.audio_rz50_zone_3_ensure_power_and_source
    - sequence:
      - action: script.audio_ensure_denon_guest_office
    - sequence:
      - action: script.audio_ensure_denon_hallway_guest_bath
    - sequence:
      - action: script.audio_nr6100_main_ensure_power_and_source
    - sequence:
      - action: script.audio_nr6100_zone_2_ensure_power_and_source
audio_all_speakers_off:
  alias: 'Audio: All Speakers OFF (Full Parallel)'
  description: Turn off all receivers in parallel.
  mode: restart
  sequence:
  - parallel:
    - sequence:
      - action: script.audio_rz50_zone_2_power_off
        data: {}
    - sequence:
      - action: script.audio_rz50_zone_3_power_off
        data: {}
    - sequence:
      - action: script.audio_denon_office_hallway_power_off
        data: {}
    - sequence:
      - action: script.audio_denon_office_and_guest_bedroom_power_off
        data: {}
    - sequence:
      - action: script.audio_nr6100_zone_2_power_off
        data: {}
    - sequence:
      - action: script.audio_nr6100_main_power_off
        data: {}
    - sequence:
      - action: script.audio_rz50_main_power_off
        data: {}
  - action: media_player.turn_off
    target:
      entity_id:
      - media_player.livingroom_tv
      - media_player.bedroom_primary_tv
    data: {}
audio_verify_multiroom:
  alias: 'Audio: Verify Multiroom'
  description: Checks power and expected source on all zones; reports mismatches.
  mode: single
  sequence:
  - variables:
      report: '{% set ns = namespace(text='''') %}

        {% set e=''media_player.tx_rz50'' %} {% set st=states(e) %}{% set cur=state_attr(e,''source'')
        %}{% set list=state_attr(e,''source_list'')|default([]) %} {% if st != ''on''
        %}{% set ns.text = ns.text + ''RZ50 Main is '' ~ st ~ ''\n'' %} {% elif ''Multiroom
        - Firestick'' not in list %}{% set ns.text = ns.text + ''RZ50 Main missing
        expected source "Multiroom - Firestick" in source_list\n'' %} {% elif cur
        != ''Multiroom - Firestick'' %}{% set ns.text = ns.text + ''RZ50 Main source
        is "'' ~ (cur|default(''unknown'')) ~ ''" not "Multiroom - Firestick"\n''
        %}{% endif %}

        {% set e=''media_player.tx_rz50_zone_2'' %} {% set st=states(e) %}{% set cur=state_attr(e,''source'')
        %}{% set list=state_attr(e,''source_list'')|default([]) %} {% if st != ''on''
        %}{% set ns.text = ns.text + ''RZ50 Zone 2 is '' ~ st ~ ''\n'' %} {% elif
        ''Main Zone Audio'' not in list %}{% set ns.text = ns.text + ''RZ50 Zone 2
        missing expected source "Main Zone Audio" in source_list\n'' %} {% elif cur
        != ''Main Zone Audio'' %}{% set ns.text = ns.text + ''RZ50 Zone 2 source is
        "'' ~ (cur|default(''unknown'')) ~ ''" not "Main Zone Audio"\n'' %}{% endif
        %}

        {% set e=''media_player.tx_rz50_zone_3'' %} {% set st=states(e) %}{% set cur=state_attr(e,''source'')
        %}{% set list=state_attr(e,''source_list'')|default([]) %} {% if st != ''on''
        %}{% set ns.text = ns.text + ''RZ50 Zone 3 is '' ~ st ~ ''\n'' %} {% elif
        ''Main Zone Audio'' not in list %}{% set ns.text = ns.text + ''RZ50 Zone 3
        missing expected source "Main Zone Audio" in source_list\n'' %} {% elif cur
        != ''Main Zone Audio'' %}{% set ns.text = ns.text + ''RZ50 Zone 3 source is
        "'' ~ (cur|default(''unknown'')) ~ ''" not "Main Zone Audio"\n'' %}{% endif
        %}

        {% set e=''media_player.denon_office_hallway'' %} {% set st=states(e) %}{%
        set cur=state_attr(e,''source'') %}{% set list=state_attr(e,''source_list'')|default([])
        %} {% if st != ''on'' %}{% set ns.text = ns.text + ''Denon Office/Hallway
        is '' ~ st ~ ''\n'' %} {% elif ''Livingroom'' not in list %}{% set ns.text
        = ns.text + ''Denon Office/Hallway missing expected source "Livingroom" in
        source_list\n'' %} {% elif cur != ''Livingroom'' %}{% set ns.text = ns.text
        + ''Denon Office/Hallway source is "'' ~ (cur|default(''unknown'')) ~ ''"
        not "Livingroom"\n'' %}{% endif %}

        {% set e=''media_player.denon_office_hallway_2'' %} {% set st=states(e) %}{%
        set cur=state_attr(e,''source'') %}{% set list=state_attr(e,''source_list'')|default([])
        %} {% if st != ''on'' %}{% set ns.text = ns.text + ''Denon Office/Hallway
        2 is '' ~ st ~ ''\n'' %} {% elif ''Livingroom'' not in list %}{% set ns.text
        = ns.text + ''Denon Office/Hallway 2 missing expected source "Livingroom"
        in source_list\n'' %} {% elif cur != ''Livingroom'' %}{% set ns.text = ns.text
        + ''Denon Office/Hallway 2 source is "'' ~ (cur|default(''unknown'')) ~ ''"
        not "Livingroom"\n'' %}{% endif %}

        {% set e=''media_player.tx_nr6100'' %} {% set st=states(e) %}{% set cur=state_attr(e,''source'')
        %}{% set list=state_attr(e,''source_list'')|default([]) %} {% if st != ''on''
        %}{% set ns.text = ns.text + ''NR6100 Main is '' ~ st ~ ''\n'' %} {% elif
        ''Multiroom - Firestick'' not in list %}{% set ns.text = ns.text + ''NR6100
        Main missing expected source "Multiroom - Firestick" in source_list\n'' %}
        {% elif cur != ''Multiroom - Firestick'' %}{% set ns.text = ns.text + ''NR6100
        Main source is "'' ~ (cur|default(''unknown'')) ~ ''" not "Multiroom - Firestick"\n''
        %}{% endif %}

        {% set e=''media_player.tx_nr6100_zone_2'' %} {% set st=states(e) %}{% set
        cur=state_attr(e,''source'') %}{% set list=state_attr(e,''source_list'')|default([])
        %} {% if st != ''on'' %}{% set ns.text = ns.text + ''NR6100 Zone 2 is '' ~
        st ~ ''\n'' %} {% elif ''Main Zone Audio'' not in list %}{% set ns.text =
        ns.text + ''NR6100 Zone 2 missing expected source "Main Zone Audio" in source_list\n''
        %} {% elif cur != ''Main Zone Audio'' %}{% set ns.text = ns.text + ''NR6100
        Zone 2 source is "'' ~ (cur|default(''unknown'')) ~ ''" not "Main Zone Audio"\n''
        %}{% endif %}

        {{ ns.text.strip() }}'
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ report | length > 0 }}'
      sequence:
      - data:
          title: Audio Verify – Problems Found
          message: '{{ report }}'
        action: persistent_notification.create
    - conditions:
      - condition: template
        value_template: '{{ report | length == 0 }}'
      sequence:
      - data:
          title: Audio Verify
          message: All zones are on and sources match.
        action: persistent_notification.create
bedroom_primary_nightstand_red_flicker_restore:
  alias: 'Bedroom Primary: Nightstand Red Flicker Restore'
  description: Flashes the nightstand lamp red briefly, then restores its exact previous
    state even if the group is active.
  mode: single
  sequence:
  - variables:
      was_on: '{{ is_state(''light.bedroom_primary_nightstand_lamp'', ''on'') }}'
      prev_brightness: '{{ state_attr(''light.bedroom_primary_nightstand_lamp'',''brightness'')
        | int(0) }}'
      prev_color_mode: '{{ state_attr(''light.bedroom_primary_nightstand_lamp'',''color_mode'')
        | default('''') }}'
      prev_rgb: '{{ state_attr(''light.bedroom_primary_nightstand_lamp'',''rgb_color'')
        | default([255,255,255]) }}'
      prev_ct: '{{ state_attr(''light.bedroom_primary_nightstand_lamp'',''color_temp'')
        | int(0) }}'
  - action: light.turn_on
    metadata: {}
    data:
      rgb_color:
      - 255
      - 0
      - 0
      brightness_pct: 100
      transition: 0
    target:
      entity_id: light.bedroom_primary_nightstand_lamp
  - delay: '00:00:00.30'
  - action: light.turn_off
    metadata: {}
    data:
      transition: 0
    target:
      entity_id: light.bedroom_primary_nightstand_lamp
  - delay: '00:00:00.30'
  - action: light.turn_on
    metadata: {}
    data:
      rgb_color:
      - 255
      - 0
      - 0
      brightness_pct: 100
      transition: 0
    target:
      entity_id: light.bedroom_primary_nightstand_lamp
  - delay: '00:00:00.30'
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ not was_on }}'
      sequence:
      - action: light.turn_off
        metadata: {}
        data:
          transition: 0
        target:
          entity_id: light.bedroom_primary_nightstand_lamp
    - conditions:
      - condition: template
        value_template: '{{ was_on and prev_color_mode == ''color_temp'' and prev_ct
          > 0 }}'
      sequence:
      - action: light.turn_on
        metadata: {}
        data:
          color_temp: '{{ prev_ct }}'
          brightness: '{{ prev_brightness if prev_brightness > 0 else omit }}'
          transition: 0.2
        target:
          entity_id: light.bedroom_primary_nightstand_lamp
    - conditions:
      - condition: template
        value_template: '{{ was_on and prev_color_mode in [''rgb'', ''hs'', ''xy'']
          }}'
      sequence:
      - action: light.turn_on
        metadata: {}
        data:
          rgb_color: '{{ prev_rgb }}'
          brightness: '{{ prev_brightness if prev_brightness > 0 else omit }}'
          transition: 0.2
        target:
          entity_id: light.bedroom_primary_nightstand_lamp
    - conditions: []
      sequence:
      - action: light.turn_on
        metadata: {}
        data:
          brightness: '{{ prev_brightness if prev_brightness > 0 else omit }}'
          transition: 0.2
        target:
          entity_id: light.bedroom_primary_nightstand_lamp
  - delay: '00:00:00.30'
audio_ensure_power_source_generic:
  alias: 'Audio: Ensure Power & Source (Generic)'
  mode: parallel
  icon: mdi:check-decagram
  fields:
    entity_id:
      name: Media Player
      description: The media_player to ensure.
      required: true
      selector:
        entity:
          domain: media_player
    expected_source:
      name: Expected Source
      description: Exact source text as shown in the entity's source attribute.
      required: true
      selector:
        text:
    retries:
      name: Retries
      description: How many times to try (power, wait, set source, verify).
      default: 4
      selector:
        number:
          min: 1
          max: 6
          step: 1
    wait_timeout:
      name: Power Wait Timeout (sec)
      default: 25
      selector:
        number:
          min: 5
          max: 60
          step: 1
    settle_delay:
      name: Settle Delay After Source Set (sec)
      default: 2
      selector:
        number:
          min: 0
          max: 10
          step: 1
  sequence:
  - variables:
      ent: '{{ entity_id }}'
      need_source: '{{ expected_source }}'
      tries: '{{ retries | int(4) }}'
      timeout: '{{ wait_timeout | int(25) }}'
      settle: '{{ settle_delay | int(2) }}'
  - repeat:
      count: '{{ tries }}'
      sequence:
      - target:
          entity_id: '{{ ent }}'
        action: media_player.turn_on
      - wait_template: '{{ is_state(ent, ''on'') }}'
        timeout: 00:00:{{ timeout }}
        continue_on_timeout: true
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ need_source | length > 0 }}'
          sequence:
          - target:
              entity_id: '{{ ent }}'
            data:
              source: '{{ need_source }}'
            action: media_player.select_source
          - delay: 00:00:{{ settle }}
        default: []
      - choose:
        - conditions:
          - condition: template
            value_template: "{% set ok_on = is_state(ent, 'on') %} {% if need_source
              | length > 0 %}\n  {{ ok_on and (state_attr(ent, 'source') == need_source)
              }}\n{% else %}\n  {{ ok_on }}\n{% endif %}\n"
          sequence:
          - stop: 'OK: {{ ent }} ready with source ''{{ need_source }}'''
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ repeat.index < tries }}'
          sequence:
          - delay:
              seconds: '{{ [2, repeat.index] | max }}'
  - data:
      title: Audio ensure failed
      message: '{{ ent }} did not reach the expected state/source after {{ tries }}
        attempt(s). Current: state=''{{ states(ent) }}'' source=''{{ state_attr(ent,
        ''source'') }}''.

        '
      notification_id: audio_ensure_{{ ent | replace('.', '_') }}
    action: persistent_notification.create
  description: ''
audio_ensure_rz50_main:
  alias: 'Audio: Ensure RZ50 Main'
  mode: single
  sequence:
  - data:
      entity_id: media_player.tx_rz50
      expected_source: Multiroom - Firestick
      retries: 4
      wait_timeout: 25
      settle_delay: 2
    action: script.audio_ensure_power_source_generic
  description: ''
audio_ensure_rz50_zone_2:
  alias: 'Audio: Ensure RZ50 Zone 2'
  mode: single
  sequence:
  - data:
      entity_id: media_player.tx_rz50_zone_2
      expected_source: Main Zone Audio
      retries: 4
      wait_timeout: 25
      settle_delay: 2
    action: script.audio_ensure_power_source_generic
  description: ''
audio_ensure_rz50_zone_3:
  alias: 'Audio: Ensure RZ50 Zone 3'
  mode: single
  sequence:
  - data:
      entity_id: media_player.tx_rz50_zone_3
      expected_source: Main Zone Audio
      retries: 4
      wait_timeout: 25
      settle_delay: 2
    action: script.audio_ensure_power_source_generic
  description: ''
audio_ensure_nr6100_main:
  alias: 'Audio: Ensure NR6100 Main'
  mode: single
  sequence:
  - data:
      entity_id: media_player.tx_nr6100
      expected_source: Multiroom - Firestick
      retries: 4
      wait_timeout: 25
      settle_delay: 2
    action: script.audio_ensure_power_source_generic
  description: ''
audio_ensure_nr6100_zone_2:
  alias: 'Audio: Ensure NR6100 Zone 2'
  mode: single
  sequence:
  - data:
      entity_id: media_player.tx_nr6100_zone_2
      expected_source: Main Zone Audio
      retries: 4
      wait_timeout: 25
      settle_delay: 2
    action: script.audio_ensure_power_source_generic
  description: ''
audio_ensure_denon_guest_office:
  alias: 'Audio: Ensure Denon Bedrrom Guest + Office'
  mode: single
  sequence:
  - data:
      entity_id: media_player.denon_office_hallway_2
      expected_source: Livingroom
      retries: 4
      wait_timeout: 25
      settle_delay: 2
    action: script.audio_ensure_power_source_generic
  description: ''
audio_ensure_denon_hallway_guest_bath:
  alias: 'Audio: Ensure Denon Hallway + Bath Guest'
  mode: single
  sequence:
  - data:
      entity_id: media_player.denon_office_hallway
      expected_source: Livingroom
      retries: 4
      wait_timeout: 25
      settle_delay: 2
    action: script.audio_ensure_power_source_generic
  description: ''
audio_reset_audio_baseline:
  alias: 'Audio: Reset Audio Baseline'
  description: Power + source-heal all zones, then set each to its Start volume respecting
    caps.
  icon: mdi:backup-restore
  mode: single
  sequence:
  - action: script.audio_rz50_main_ensure_power_and_source
  - action: script.audio_rz50_zone_2_ensure_power_and_source
  - action: script.audio_rz50_zone_3_ensure_power_and_source
  - action: script.audio_nr6100_main_ensure_power_and_source
  - action: script.audio_nr6100_zone_2_ensure_power_and_source
  - action: script.audio_denon_guest_office_ensure_power_and_source
  - action: script.audio_denon_hallway_guest_ensure_power_and_source
  - data:
      target_mode: start
      respect_caps: true
    action: script.audio_batch_volume_engine
bedroom_primary_tv_power_off_duplicate:
  sequence:
  - repeat:
      count: 4
      sequence:
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ states(''media_player.bedroom_primary_tv'') not in
              [''off'',''standby'',''unavailable'',''unknown''] }}'
          sequence:
          - action: media_player.turn_off
            data: {}
            target:
              entity_id: media_player.bedroom_primary_tv
          - wait_template: '{{ states(''media_player.bedroom_primary_tv'') in [''off'',''standby'',''unavailable'',''unknown'']
              }}'
            timeout: 00:00:05
            continue_on_timeout: true
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ states(''media_player.bedroom_primary_tv'') in [''off'',''standby'',''unavailable'',''unknown'']
              }}'
          sequence:
          - stop: Bedroom Primary TV is off
      - delay: 00:00:02
  alias: 'Bedroom Primary: TV Power Off'
  description: Retry power off with waits and verification.
  mode: restart
audio_batch_volume_engine:
  alias: 'Audio: Batch Volume Engine'
  mode: queued
  icon: mdi:volume-source
  fields:
    target_mode:
      name: Target Mode
      description: Choose Min/Start/Max (falls back to Start unless a percent is provided)
      selector:
        select:
          options:
          - min
          - start
          - max
      default: ''
    percent:
      name: Percent (0–100)
      description: Optional explicit volume; clamped to Min/Max
      selector:
        number:
          min: 0
          max: 100
          step: 1
    players:
      name: Players (optional)
      description: 'Limit to these players; empty = all controllable (excludes passthrough
        Zone 3)

        '
      selector:
        entity:
          domain: media_player
          multiple: true
    respect_caps:
      name: Respect Min/Max caps
      selector:
        boolean: {}
      default: true
  variables:
    vol_profile:
      media_player.denon_office_hallway_2:
        min: 47
        start: 58
        max: 73
      media_player.denon_office_hallway:
        min: 48
        start: 59
        max: 74
      media_player.tx_nr6100:
        min: 56
        start: 60
        max: 70
      media_player.tx_nr6100_zone_2:
        min: 56
        start: 60
        max: 70
      media_player.tx_rz50:
        min: 54
        start: 60
        max: 76
      media_player.tx_rz50_zone_2:
        min: 52
        start: 60
        max: 70
    zone3_entity: media_player.tx_rz50_zone_3
    controllable_players:
    - media_player.denon_office_hallway_2
    - media_player.denon_office_hallway
    - media_player.tx_nr6100
    - media_player.tx_nr6100_zone_2
    - media_player.tx_rz50
    - media_player.tx_rz50_zone_2
    chosen_players: '{% set sel = players | default([]) %} {{ sel if sel | length
      > 0 else controllable_players }}

      '
    use_percent: '{{ percent is defined and percent is not none }}'
    chosen_mode: '{{ (target_mode|lower) if target_mode is string else '''' }}'
    default_profile:
      min: 0
      start: 50
      max: 100
    tolerance: 0.01
  sequence:
  - repeat:
      for_each: '{{ chosen_players }}'
      sequence:
      - variables:
          ent: '{{ repeat.item }}'
          prof: '{{ vol_profile.get(ent, default_profile) }}'
          minp: '{{ prof.min | float(0) }}'
          startp: '{{ prof.start | float(50) }}'
          maxp: '{{ prof.max | float(100) }}'
          desired_raw: "{% if chosen_mode in ['min','start','max'] %}\n  {{ prof[chosen_mode]
            }}\n{% elif use_percent %}\n  {{ percent }}\n{% else %}\n  {{ startp }}\n{%
            endif %}\n"
          desired_clamped: "{% if respect_caps %}\n  {{ [maxp, [minp, desired_raw|float(0)]|max]|min
            }}\n{% else %}\n  {{ desired_raw|float(0) }}\n{% endif %}\n"
          vol_level: '{{ (desired_clamped | float(0)) / 100 }}'
          current_level: '{{ state_attr(ent, ''volume_level'') | float(0) }}'
          should_set: '{{ (vol_level - current_level) | abs > tolerance }}'
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ ent == zone3_entity }}'
          sequence: []
        - conditions:
          - condition: template
            value_template: '{{ states(ent) not in [''off'',''unavailable'',''unknown'']
              }}'
          - condition: template
            value_template: '{{ should_set }}'
          sequence:
          - action: media_player.volume_set
            target:
              entity_id: '{{ ent }}'
            data:
              volume_level: '{{ vol_level }}'
        default: []
audio_rz50_main_power_off:
  alias: 'Audio: RZ50 Main Power Off'
  description: Turns off RZ50 main with retry and verify.
  mode: restart
  sequence:
  - repeat:
      count: 4
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: media_player.tx_rz50
            state: 'on'
          sequence:
          - action: media_player.turn_off
            target:
              entity_id: media_player.tx_rz50
          - wait_template: '{{ is_state(''media_player.tx_rz50'',''off'') }}'
            timeout: 00:00:05
            continue_on_timeout: true
      - choose:
        - conditions:
          - condition: state
            entity_id: media_player.tx_rz50
            state: 'off'
          sequence:
          - stop: RZ50 main is off
      - delay: 00:00:02
audio_rz50_zone_2_power_off:
  alias: 'Audio: RZ50 Zone 2 Power Off'
  description: Turns off RZ50 zone 2 with retry and verify.
  mode: restart
  sequence:
  - repeat:
      count: 4
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: media_player.tx_rz50_zone_2
            state: 'on'
          sequence:
          - action: media_player.turn_off
            target:
              entity_id: media_player.tx_rz50_zone_2
          - wait_template: '{{ is_state(''media_player.tx_rz50_zone_2'',''off'') }}'
            timeout: 00:00:05
            continue_on_timeout: true
      - choose:
        - conditions:
          - condition: state
            entity_id: media_player.tx_rz50_zone_2
            state: 'off'
          sequence:
          - stop: RZ50 zone 2 is off
      - delay: 00:00:02
audio_rz50_zone_3_power_off:
  alias: 'Audio: RZ50 Zone 3 Power Off'
  description: Turns off RZ50 zone 3 with retry and verify.
  mode: restart
  sequence:
  - repeat:
      count: 4
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: media_player.tx_rz50_zone_3
            state: 'on'
          sequence:
          - action: media_player.turn_off
            target:
              entity_id: media_player.tx_rz50_zone_3
          - wait_template: '{{ is_state(''media_player.tx_rz50_zone_3'',''off'') }}'
            timeout: 00:00:05
            continue_on_timeout: true
      - choose:
        - conditions:
          - condition: state
            entity_id: media_player.tx_rz50_zone_3
            state: 'off'
          sequence:
          - stop: RZ50 zone 3 is off
      - delay: 00:00:02
audio_nr6100_main_power_off:
  alias: 'Audio: NR6100 Main Power Off'
  description: Turns off NR6100 main with retry and verify.
  mode: restart
  sequence:
  - repeat:
      count: 4
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: media_player.tx_nr6100
            state: 'on'
          sequence:
          - action: media_player.turn_off
            target:
              entity_id: media_player.tx_nr6100
          - wait_template: '{{ is_state(''media_player.tx_nr6100'',''off'') }}'
            timeout: 00:00:05
            continue_on_timeout: true
      - choose:
        - conditions:
          - condition: state
            entity_id: media_player.tx_nr6100
            state: 'off'
          sequence:
          - stop: NR6100 main is off
      - delay: 00:00:02
audio_nr6100_zone_2_power_off:
  alias: 'Audio: NR6100 Zone 2 Power Off'
  description: Turns off NR6100 zone 2 with retry and verify.
  mode: restart
  sequence:
  - repeat:
      count: 4
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: media_player.tx_nr6100_zone_2
            state: 'on'
          sequence:
          - action: media_player.turn_off
            target:
              entity_id: media_player.tx_nr6100_zone_2
          - wait_template: '{{ is_state(''media_player.tx_nr6100_zone_2'',''off'')
              }}'
            timeout: 00:00:05
            continue_on_timeout: true
      - choose:
        - conditions:
          - condition: state
            entity_id: media_player.tx_nr6100_zone_2
            state: 'off'
          sequence:
          - stop: NR6100 zone 2 is off
      - delay: 00:00:02
audio_denon_office_and_guest_bedroom_power_off:
  alias: 'Audio: Denon Office and Guest Bedroom Power Off'
  description: Turns off Denon Office Hallway 2 with retry and verify.
  mode: restart
  sequence:
  - repeat:
      count: 4
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: media_player.denon_office_hallway_2
            state: 'on'
          sequence:
          - action: media_player.turn_off
            target:
              entity_id: media_player.denon_office_hallway_2
          - wait_template: '{{ is_state(''media_player.denon_office_hallway_2'',''off'')
              }}'
            timeout: 00:00:05
            continue_on_timeout: true
      - choose:
        - conditions:
          - condition: state
            entity_id: media_player.denon_office_hallway_2
            state: 'off'
          sequence:
          - stop: Denon Office Hallway 2 is off
      - delay: 00:00:02
audio_nr6100_power_off:
  alias: 'Audio: NR6100 Power Off'
  mode: single
  sequence:
  - action: script.audio_nr6100_main_power_off
  description: ''
audio_rz50_main_power_on:
  alias: 'Audio: RZ50 Main Power On'
  mode: single
  sequence:
  - action: script.audio_rz50_main_ensure_power_and_source
  description: ''
audio_rz50_zone_2_power_on:
  alias: 'Audio: RZ50 Zone 2 Power On'
  mode: single
  sequence:
  - action: script.audio_rz50_zone_2_ensure_power_and_source
  description: ''
audio_rz50_zone_3_power_on:
  alias: 'Audio: RZ50 Zone 3 Power On'
  mode: single
  sequence:
  - action: script.audio_rz50_zone_3_ensure_power_and_source
  description: ''
audio_nr6100_main_power_on:
  alias: 'Audio: NR6100 Main Power On'
  mode: single
  sequence:
  - action: script.audio_nr6100_main_ensure_power_and_source
  description: ''
audio_nr6100_zone_2_power_on:
  alias: 'Audio: NR6100 Zone 2 Power On'
  mode: single
  sequence:
  - action: script.audio_nr6100_zone_2_ensure_power_and_source
  description: ''
audio_denon_hallway_and_bathroom_guest_power_on:
  alias: 'Audio: Denon Hallway and Bathroom Guest Power On'
  mode: single
  sequence:
  - action: script.audio_denon_office_hallway_ensure_power_and_source
  description: ''
audio_denon_office_and_bedroom_guest_power_on:
  alias: 'Audio: Denon Office and Bedroom Guest Power On'
  mode: single
  sequence:
  - action: script.audio_denon_office_hallway_2_ensure_power_and_source
  description: ''
audio_verify_multiroom_2:
  alias: 'Audio: Verify Multiroom'
  description: Checks each zone's current source vs the expected multiroom source
    and reports mismatches; does not change anything.
  icon: mdi:playlist-check
  mode: single
  sequence:
  - variables:
      expected_map:
        media_player.tx_rz50: Multiroom - Firestick
        media_player.tx_rz50_zone_2: Main Zone Audio
        media_player.tx_rz50_zone_3: Main Zone Audio
        media_player.tx_nr6100: Multiroom - Firestick
        media_player.tx_nr6100_zone_2: Main Zone Audio
        media_player.denon_office_hallway_2: Livingroom
        media_player.denon_office_hallway: Livingroom
      title: 'Audio: Verify Multiroom'
      body: "{% set ns = namespace(mismatches=[], skipped=[]) %} {% for ent, exp in
        expected_map.items() %}\n  {% set st = states(ent) %}\n  {% if st in ['off','unavailable','unknown']
        %}\n    {% set ns.skipped = ns.skipped + [ ent ~ ' (' ~ st ~ ')' ] %}\n  {%
        else %}\n    {% set cur = (state_attr(ent, 'source') | string | trim) %}\n
        \   {% if cur | lower != (exp | string | trim | lower) %}\n      {% set ns.mismatches
        = ns.mismatches + [ ent ~ ': expected \"' ~ exp ~ '\", got \"' ~ cur ~ '\"'
        ] %}\n    {% endif %}\n  {% endif %}\n{% endfor %} {% if ns.mismatches | length
        == 0 %}\n  ✅ All zones OK. {% if ns.skipped|length>0 %}Skipped {{ ns.skipped|length
        }} (off/unavailable): {{ ns.skipped | join(', ') }}.{% endif %}\n{% else %}\n
        \ ❗ Mismatches ({{ ns.mismatches | length }}):\n  - {{ ns.mismatches | join('\\n-
        ') }}\n  {% if ns.skipped|length>0 %}Skipped {{ ns.skipped|length }} (off/unavailable):
        {{ ns.skipped | join(', ') }}.{% endif %}\n{% endif %}"
  - action: persistent_notification.create
    data:
      title: '{{ title }}'
      message: '{{ body }}'
audio_party_whole_condo:
  alias: 'Audio: Party (Whole Condo)'
  description: Powers on Livingroom Fire TV + TV, runs All-ON for receivers, then
    applies Start volumes (caps respected).
  icon: mdi:party-popper
  mode: single
  sequence:
  - parallel:
    - action: media_player.turn_on
      target:
        entity_id: media_player.livingroom_fire_tv
    - action: remote.turn_on
      target:
        entity_id: remote.livingroom_tv
  - delay: 00:00:02
  - action: script.audio_all_speakers_on_full_parallel
  - action: script.audio_batch_volume_engine
    data:
      target_mode: start
      respect_caps: true
audio_listen_livingroom_kitchen_z3:
  alias: 'Audio: Listen - Livingroom + Kitchen (+ TV)'
  description: Powers on Livingroom Fire TV + TV, ensures RZ50 main/Z2 sources, then
    applies Start volumes to those two zones (caps respected). Z3 is not used.
  icon: mdi:television-speaker
  mode: single
  sequence:
  - parallel:
    - action: media_player.turn_on
      target:
        entity_id: media_player.livingroom_fire_tv
    - action: remote.turn_on
      target:
        entity_id: remote.livingroom_tv
  - delay: 00:00:02
  - action: script.audio_rz50_main_ensure_power_and_source
  - action: script.audio_rz50_zone_2_ensure_power_and_source
    data: {}
  - choose:
    - conditions:
      - condition: state
        entity_id: media_player.livingroom_tv
        state: 'off'
      sequence:
      - action: remote.turn_on
        target:
          entity_id: remote.livingroom_tv
      - delay: 00:00:02
  - action: script.audio_batch_volume_engine
    data:
      target_mode: start
      respect_caps: true
      players:
      - media_player.tx_rz50
      - media_player.tx_rz50_zone_2
audio_watch_tv_livingroom_no_scene:
  alias: 'Audio: Watch TV - Livingroom (No Scene)'
  description: Powers on Livingroom Fire TV + TV, then ensures RZ50 main uses Multiroom
    - Firestick. No lighting or volume changes.
  icon: mdi:television-speaker
  mode: single
  sequence:
  - parallel:
    - action: media_player.turn_on
      target:
        entity_id: media_player.livingroom_fire_tv
    - action: remote.turn_on
      target:
        entity_id: remote.livingroom_tv
  - delay: 00:00:02
  - action: script.audio_rz50_main_ensure_power_and_source
  - choose:
    - conditions:
      - condition: state
        entity_id: media_player.livingroom_tv
        state: 'off'
      sequence:
      - action: remote.turn_on
        target:
          entity_id: remote.livingroom_tv
      - delay: 00:00:02
audio_watch_tv_livingroom_power_off:
  alias: 'Audio: Watch TV — Livingroom (Power Off)'
  description: 'Safely power down the Livingroom chain in order: TV → Fire TV → RZ50
    main (uses your RZ50 power-off script with retry/verify).

    '
  icon: mdi:television-off
  mode: single
  sequence:
  - action: remote.turn_off
    target:
      entity_id: remote.livingroom_tv
  - delay:
      seconds: 2
  - action: media_player.turn_off
    target:
      entity_id: media_player.livingroom_fire_tv
  - delay:
      seconds: 2
  - action: script.audio_rz50_main_power_off
  - choose:
    - conditions:
      - condition: state
        entity_id: media_player.livingroom_tv
        state: 'on'
      sequence:
      - delay:
          seconds: 2
      - action: remote.turn_off
        target:
          entity_id: remote.livingroom_tv
audio_listen_whole_house_soft:
  alias: 'Audio: Listen — Whole House (Soft)'
  description: 'Wake Livingroom Fire TV + TV (spine), assert RZ50 main source, then
    bring all speakers online and apply Start volumes (caps).

    '
  icon: mdi:music
  mode: single
  sequence:
  - parallel:
    - action: media_player.turn_on
      target:
        entity_id: media_player.livingroom_fire_tv
    - action: remote.turn_on
      target:
        entity_id: remote.livingroom_tv
  - delay: 00:00:02
  - action: script.audio_rz50_main_ensure_power_and_source
  - action: script.audio_all_speakers_on_full_parallel
  - action: script.audio_batch_volume_engine
    data:
      target_mode: start
      respect_caps: true
bathroom_primary_toggle_lights_manual_override_script:
  alias: 'Bathroom Primary: Toggle Lights & Manual Override | Script'
  description: 'Toggles lights and override based on current state: - If lights are
    OFF, turn ON and enable override. - If lights are ON and override is OFF, enable
    override (keep lights ON). - If lights are ON and override is ON, turn OFF and
    disable override (and start cooldown).

    '
  mode: restart
  sequence:
  - choose:
    - conditions:
      - condition: state
        entity_id: light.bathroom_primary_all_lights_group
        state: 'off'
      sequence:
      - action: light.turn_on
        data:
          transition: 0.5
          brightness_pct: 100
        target:
          entity_id: light.bathroom_primary_all_lights_group
      - action: input_boolean.turn_on
        target:
          entity_id: input_boolean.bathroom_primary_lights_manual_override
    - conditions:
      - condition: state
        entity_id: light.bathroom_primary_all_lights_group
        state: 'on'
      - condition: state
        entity_id: input_boolean.bathroom_primary_lights_manual_override
        state: 'off'
      sequence:
      - action: input_boolean.turn_on
        target:
          entity_id: input_boolean.bathroom_primary_lights_manual_override
    - conditions:
      - condition: state
        entity_id: light.bathroom_primary_all_lights_group
        state: 'on'
      - condition: state
        entity_id: input_boolean.bathroom_primary_lights_manual_override
        state: 'on'
      sequence:
      - action: light.turn_off
        data:
          transition: 0.5
        target:
          entity_id: light.bathroom_primary_all_lights_group
      - action: input_boolean.turn_off
        target:
          entity_id: input_boolean.bathroom_primary_lights_manual_override
      - action: script.turn_on
        target:
          entity_id: script.bathroom_primary_start_motion_cooldown
party_compat_toggle_mode:
  alias: Party (compat) Toggle Mode
  description: Wrapper for old name - forwards to party_toggle_mode
  mode: single
  icon: mdi:party-popper
  sequence:
  - action: script.party_toggle_mode
    metadata: {}
    data: {}
cleaning_compat_toggle_mode:
  alias: Cleaning (compat) Toggle Mode
  description: Wrapper for old name - forwards to cleaning_toggle_mode
  mode: single
  icon: mdi:broom
  sequence:
  - action: script.cleaning_toggle_mode
    data: {}
